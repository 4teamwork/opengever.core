[buildout]

testserver-parts =
    testserver
    testserver-selftest

parts +=
    ${:testserver-parts}

[testserver]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework
entry-points = testserver=opengever.core.testserver_zope2server:server
initialization =
    import os
    os.environ.setdefault('MSGCONVERT_URL', 'http://localhost:8090/')
    os.environ.setdefault('SABLON_URL', 'http://localhost:8091/')
    os.environ.setdefault('PDFLATEX_URL', 'http://localhost:8092/')
    os.environ.setdefault('WEASYPRINT_URL', 'http://localhost:8093/')
    # Enable conditional readonly patches during tests
    os.environ['GEVER_READ_ONLY_MODE'] = 'true'
    os.environ['GEVER_DOSSIER_TRANSFERS_ALLOW_SAME_AU'] = 'true'
    os.environ.setdefault('ZSERVER_PORT', '55001')
    os.environ.setdefault('LISTENER_PORT', os.environ.get('TESTSERVER_CTL_PORT', '55002'))
    os.environ.setdefault('FTW_STRUCTLOG_MUTE_SETUP_ERRORS', 'true')
    os.environ.setdefault('TEAMRAUM_URL', 'http://localhost')
    import sys
    sys.argv.insert(1, 'opengever.core.testserver.OPENGEVER_TESTSERVER')
    # Enable c.indexing during tests, but patch it to not defer operations
    from opengever.testing.patch import patch_collective_indexing
    patch_collective_indexing()
    from collective.indexing import monkey
    # Patch readonly support onto DemoStorage during tests
    from opengever.testing.patch import patch_demostorage_to_support_readonly_mode
    patch_demostorage_to_support_readonly_mode()


[testserver-selftest]
recipe = zc.recipe.egg:scripts
eggs = opengever.core[tests]
entry-points = testserver-selftest=opengever.core.testserver_selftest:selftest
scripts = testserver-selftest

[versions]
# Pin Selenium to last Py27 compatible version
selenium = <4.0
