services:
  ogcore: &ogcore
    build:
      context: .
      dockerfile: ./docker/core/Dockerfile
      secrets:
        - gldt
    image: 4teamwork/ogcore:latest
    volumes:
      - ogcore:/data
    ports:
      - "8080:8080"
      - "8160:8160"
    environment:
      - PLONE_LDAP_BIND_UID=${LDAP_BIND_DN:-cn=admin,dc=dev,dc=onegovgever,dc=ch}
      - PLONE_LDAP_BIND_PWD=${LDAP_BIND_PASSWORD:-secret}
      - MSGCONVERT_URL=http://msgconvert:8080/
      - SABLON_URL=http://sablon:8080/
      - PDFLATEX_URL=http://pdflatex:8080/
      - WEASYPRINT_URL=http://weasyprint:8080/
      - OGDS_SYNC_URL=http://ogds-sync:8080/
    depends_on:
      - zeoserver
      - ogds
      - solr
    profiles:
      - all
      - ogcore
  ogcore-cron:
    <<: *ogcore
    command: cron
    ports:
      - "8082:8080"
    profiles:
      - all
      - ogcore-cron
  zeoserver:
    image: 4teamwork/zeoserver:4.3.20
    volumes:
      - ogcore:/data
    profiles:
      - all
      - ogcore
  ogds:
    image: postgres:13-alpine
    volumes:
      - ogds:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${OGDS_DB_USER:-ogds}
      - POSTGRES_PASSWORD=${OGDS_DB_PASSWORD:-secret}
      - POSTGRES_DB=${OGDS_DB_NAME:-ogds}
    ports:
      - 15432:5432
  ogds-sync:
    image: 4teamwork/ogds-sync:latest
    ports:
      - 8099:8080
    environment:
      - OGDS_DSN=postgresql://${OGDS_DB_USER:-ogds}:${OGDS_DB_PASSWORD:-secret}@${OGDS_DB_HOST:-ogds}/${OGDS_DB_NAME:-ogds}
      - LDAP_PROFILE=${LDAP_PROFILE:-OpenLDAPLegacy}
      - LDAP_URL=${LDAP_SERVER_URI:-ldap://ldap:1389}
      - LDAP_BIND_DN=${LDAP_BIND_DN:-cn=admin,dc=dev,dc=onegovgever,dc=ch}
      - LDAP_BIND_PASSWORD=${LDAP_BIND_PASSWORD:-secret}
      - LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN:-ou=Users,dc=dev,dc=onegovgever,dc=ch}
      - LDAP_GROUP_BASE_DN=${LDAP_GROUP_BASE_DN:-ou=Groups,dc=dev,dc=onegovgever,dc=ch}
    depends_on:
      - ogds
  solr:
    image: 4teamwork/ogsolr:latest
    build:
      context: .
      dockerfile: ./docker/solr/Dockerfile
    command: solr-foreground
    volumes:
      - solr:/var/solr
    environment:
      - SOLR_CORES=development testing functionaltesting testserver
    ports:
      - 8983:8983
    ulimits:
      nofile:
        soft: 65000
        hard: 65000
  ldap:
    image: bitnami/openldap:2.6
    ports:
      - 1389:1389
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=secret
      - LDAP_ROOT=dc=dev,dc=onegovgever,dc=ch
      - LDAP_ADMIN_DN=cn=admin,dc=dev,dc=onegovgever,dc=ch
    volumes:
      - ldap:/bitnami/openldap
      - ./docker/ldap.ldif:/ldifs/ldap.ldif
  redis:
    image: redis:6.2-alpine
    command:
      - redis-server
      - --save 60 1
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  ogui:
    image: 4teamwork/ogui:latest
    profiles:
      - all
  httpd:
    image: 4teamwork/oghttpd:latest
    build:
      context: .
      dockerfile: ./docker/httpd/Dockerfile
    ports:
      - "8088:80"
    depends_on:
      - ogui
      - ogcore
    environment:
      - HTTP_PROTOCOL=http
      - HTTP_PORT=8088
      - PORTAL_HOST=ianus-frontend
    profiles:
      - all
  msgconvert:
    image: 4teamwork/msgconvert:latest
    ports:
      - 8090:8080
  sablon:
    image: 4teamwork/sablon:latest
    ports:
      - 8091:8080
  pdflatex:
    image: 4teamwork/pdflatex:latest
    ports:
      - 8092:8080
  weasyprint:
    image: 4teamwork/weasyprint:latest
    ports:
      - 8093:8080
  clamav:
    image: clamav/clamav:latest
    ports:
      - '3310:3310'
    volumes:
      - clam_db:/var/lib/clamav
      - ./clamav/clamd.conf:/etc/clamav/clamd.conf
    profiles:
      - clamav
  mta:
    image: 4teamwork/ogmta:latest
    build:
      context: .
      dockerfile: ./docker/mta/Dockerfile
    ports:
      - '8025:25'
    environment:
      POSTFIX_MYHOSTNAME: ogmta.onegovgever.ch
      POSTFIX_MYORIGIN: dev.onegovgever.ch
      POSTFIX_SMTPD_TLS_SECURITY_LEVEL: none
      VIRTUAL_DOMAINS_0: name=dev.onegovgever.ch,url=http://ogcore:8080/ogsite
    profiles:
      - mta
  ianus-frontend:
    image: ghcr.io/4teamwork/ianus-frontend:2024.2.0
    ports:
      - "3000:80"
    depends_on:
      - ianus-backend
    environment:
      - IANUS_BACKEND_HOST=ianus-backend
      - IANUS_PATH_PREFIX=/portal
    profiles:
      - all
      - ianus
  ianus-backend:
    image: ghcr.io/4teamwork/ianus-backend:2024.2.0
    ports:
      - "8000:8000"
    depends_on:
      - ianus-db
    environment:
      - DJANGO_SECRET_KEY=secret
      - DJANGO_ALLOWED_HOSTS=localhost,teamraum,gever,ianus-frontend
      - DJANGO_PATH_PREFIX=/portal
      - DJANGO_SESSION_COOKIE_SECURE=False
      - DJANGO_CSRF_COOKIE_SECURE=False
      - DJANGO_DATABASE_NAME=ianus
      - DJANGO_DATABASE_USER=ianus
      - DJANGO_DATABASE_PASSWORD=secret
      - DJANGO_DATABASE_HOST=ianus-db
      - DJANGO_DATABASE_PORT=5432
      - DJANGO_TWO_FACTOR_REQUIRED=False
      - DJANGO_OIDC_RP_SIGN_ALGO=HS256
      - DJANGO_AUTH_LDAP_BIND_DN=${LDAP_BIND_DN:-cn=admin,dc=dev,dc=onegovgever,dc=ch}
      - DJANGO_AUTH_LDAP_BIND_PASSWORD=${LDAP_BIND_PASSWORD:-secret}
      - DJANGO_AUTH_LDAP_SERVER_URI=${LDAP_SERVER_URI:-ldap://ldap:1389}
      - DJANGO_AUTH_LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN:-ou=Users,dc=dev,dc=onegovgever,dc=ch}
      - DJANGO_AUTH_LDAP_USER_ATTR_MAP={'first_name':'givenName','last_name':'sn','email':'mail','username':'uid'}
      - DJANGO_AUTH_LDAP_GROUP_BASE_DN=ou=Groups,dc=dev,dc=onegovgever,dc=ch
      - DJANGO_AUTH_LDAP_GROUP_TYPE_CLASS=django_auth_ldap.config.GroupOfUniqueNamesType
      - DJANGO_AUTH_LDAP_GROUP_MEMBER_ATTR=uniqueMember
      - DJANGO_AUTH_LDAP_GROUP_SEARCH_FILTER=(objectClass=groupOfUniqueNames)
      - DJANGO_AUTH_LDAP_USER_ADDITIONAL_ATTRS=memberOf
      - DJANGO_CAS_USER_ATTR_MAP={'email':'mail','firstname':'givenName','lastname':'sn','groups':'memberOf'}

    profiles:
      - all
      - ianus
  ianus-db:
    image: postgres:13-alpine
    volumes:
      - ./var/ianus-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ianus
      - POSTGRES_USER=ianus
      - POSTGRES_PASSWORD=secret
    profiles:
      - all
      - ianus
  testserver-solr:
    image: 4teamwork/ogsolr:latest
    build:
      context: .
      dockerfile: ./docker/solr/Dockerfile
    command: solr-foreground
    environment:
      - SOLR_CORES=testserver
    ports:
      - 18983:8983
    profiles:
      - testserver
  testserver:
    build:
      context: .
      dockerfile: ./docker/testserver/Dockerfile
      secrets:
        - gldt
    image: 4teamwork/ogtestserver:latest
    ports:
      - 55001:55001
      - 55002:55002
    environment:
      - SOLR_HOSTNAME=testserver-solr
      - TESTSERVER_REUSE_RUNNING_SOLR=8983
      - SOLR_PORT=8983
      - MSGCONVERT_URL=http://msgconvert:8080/
      - SABLON_URL=http://sablon:8080/
      - PDFLATEX_URL=http://pdflatex:8080/
      - WEASYPRINT_URL=http://weasyprint:8080/
    depends_on:
      - msgconvert
      - sablon
      - pdflatex
      - weasyprint
      - testserver-solr
    profiles:
      - testserver

  kub:
    image: 4teamwork/kub:latest
    ports:
      - "3100:8000"
    depends_on:
      - kub-db
    environment:
      DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1
      DJANGO_SECRET_KEY: secret
      DJANGO_DATABASE_HOST: kub-db
      DJANGO_DATABASE_NAME: kub
      DJANGO_DATABASE_USER: kub
      DJANGO_DATABASE_PASSWORD: secret
      CAS_SERVER_URL: http://ianus-frontend/portal/cas
      CAS_ROOT_PROXIED_AS: http://localhost:3100
      ALLOWED_PORTAL_GROUPS: all
    volumes:
      - kub_media:/app/media
    profiles:
      - kub
  kub-db:
    image: postgres:13-alpine
    volumes:
      - kub_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kub
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: kub
    profiles:
      - kub

volumes:
  ogcore:
  ogds:
  solr:
  ldap:
  redis:
  clam_db:
  kub_db:
  kub_media:

secrets:
  gldt:
    environment: GITLAB_DEPLOY_TOKEN
