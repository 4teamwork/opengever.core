[buildout]
extends =
    base-plone-4.3.x.cfg
    https://raw.githubusercontent.com/4teamwork/gever-buildouts/master/standard-dev.cfg
    https://raw.github.com/4teamwork/ftw-buildouts/master/bumblebee.cfg
    sphinx.cfg
    https://raw.githubusercontent.com/4teamwork/ftw-buildouts/master/format-xml.cfg
    start_all.cfg
    base-testserver.cfg
    base-qa.cfg

find-links +=
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/docxcompose
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/ftw-bumblebee
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/ftw-flamegraph
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/ftw-zopemaster
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/opengever-core
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/products-ldapmultiplugins
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/products-ldapuserfolder
    https://git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple/relstorage

always-checkout = false

ogds-db-name = ogds
ogds-dsn = postgresql://ogds:secret@localhost:15432/ogds

tool-parts +=
    docxcompose

solr-core-name = development

development-parts +=
    ${buildout:sphinx-parts}
    ${buildout:start-all-parts}

development-parts -=
# Disable generating a bin/i18n-build script (from plone-development.cfg),
# because we have our own copy of bin/i18n-build committed in git.
    i18n-build

code-audit-parts =
    flake8

# this re-adds parts that would be dropped otherwise since buildout cannot really deal
# with our complicated inheritance hierarchy
parts +=
    ${buildout:early-parts}
    ${buildout:development-parts}
    ${buildout:tool-parts}
    ${buildout:test-parts}
    ${buildout:code-audit-parts}
    ${buildout:format-xml-parts}
    ${buildout:i18n-parts}
    chameleon-cache

parts -=
    gems

# example mysql configuration
#ogds-db-name = opengever
#ogds-db-user = opengever
#ogds-db-pw = opengever
#ogds-dsn = mysql://${buildout:ogds-db-user}:${buildout:ogds-db-pw}@localhost/${buildout:ogds-db-name}?charset=utf8
#ogds-db-driver = MySQL-python

zcml-additional-fragments += ${buildout:solr-zcml}

[upgrade]
eggs += ftw.upgrade[colors]

[instance]
zserver-threads = 4
bumblebee-internal-plone-url = http://localhost:${instance:http-address}/fd
environment-vars +=
    BUMBLEBEE_APP_ID gever_dev
    BUMBLEBEE_INTERNAL_PLONE_URL ${instance:bumblebee-internal-plone-url}
    BUMBLEBEE_PUBLIC_URL http://localhost:3000/
    TEAMRAUM_URL http://localhost:8080/fd
    MSGCONVERT_URL http://localhost:8090/
    SABLON_URL http://localhost:8091/
    PDFLATEX_URL http://localhost:8092/
    WEASYPRINT_URL http://localhost:8093/
    OGDS_SYNC_URL http://localhost:8099/

zcml +=
  opengever.core

[test]
initialization +=
    os.environ['MSGCONVERT_URL'] = 'http://localhost:8090/'
    os.environ['SABLON_URL'] = 'http://localhost:8091/'
    os.environ['PDFLATEX_URL'] = 'http://localhost:8092/'
    os.environ['WEASYPRINT_URL'] = 'http://localhost:8093/'

[testserver]
initialization +=
    os.environ.setdefault('MSGCONVERT_URL', 'http://localhost:8090/')
    os.environ.setdefault('SABLON_URL', 'http://localhost:8091/')
    os.environ.setdefault('PDFLATEX_URL', 'http://localhost:8092/')
    os.environ.setdefault('WEASYPRINT_URL', 'http://localhost:8093/')

[docxcompose]
recipe = zc.recipe.egg:script
eggs = docxcompose
