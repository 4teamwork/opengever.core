#!/usr/bin/env bash

set -euo pipefail

# Nuke the old fixture
echo y | bin/remove-test-cache

export GEVER_CACHE_TEST_DB=true
date="$(date +'%Y-%m-%d')"
commithash="$(git rev-parse --verify HEAD)"

# Profile fixture generation
echo 'Profiling fixture generation ...'
# Close enough to 'just the fixture'
python -m cProfile -o "$date"-"$commithash"-opengever.testing-fixturegen.prof \
  bin/test -t TestDumpFixtureStrutureToReadme &>/dev/null

# Run the fixture using layers first as some of the others invalidate the
# fixture cache
layers=('opengever.core.testing.opengever.core:integration')
echo 'Discovering test layers ...'
while IFS='' read -r layer
do
  layers+=("$layer")
done < <(
  bin/test \
    --layer '!opengever.core.testing.opengever.core:integration' \
    --list-tests 2>/dev/null \
    | grep -E '^Listing' \
    | awk '{print $2}'
  )

modules=()
while IFS='' read -r module
do
  modules+=("$module")
done < <(bin/list-modules)

for layer in "${layers[@]}"
do
  for module in "${modules[@]}"
  do
  moduleparam=(
    '-m'
    "$module"
  )

  # opengever.task also greedy matches opengever.tasktemplate
  if [ "$module" == 'opengever.task' ]
  then
    moduleparam+=('-m')
    moduleparam+=('!opengever.tasktemplate')
  fi
  output="$date"-"$commithash"-"$module"-"$layer".prof

  echo "Profiling $layer $module ..."
  python -m cProfile -o "$output" \
    bin/test --layer "$layer" "${moduleparam[@]}" &>/dev/null

  done
done

# EOF
