#!/bin/bash

lint () {
    changed_files=("${!1}")
    linters=("${!2}")
    title="$3"
    if [ "${changed_files[*]}" ] \
        && [ "${linters[*]}" ]; then
            echo ''
            echo "Detected changes in this branch in the following $title:"
            for file in "${changed_files[@]}"; do
                echo "$file"
            done

            for linter in "${linters[@]}"; do

                linter_config_file="parts/$linter/$linter.cfg"
                if [ -s "$linter_config_file" ]; then

                    local excludes
                    excludes=$(
                        grep 'exclude' "$linter_config_file" \
                        | cut -d' ' -f3 \
                        | tr ',' '|' \
                        )

                    local unexcluded_changed_files
                    unexcluded_changed_files=($(
                        echo "${changed_files[@]}" \
                        | tr ' ' '\n' \
                        | grep -vE "($excludes)" \
                    ))
                else
                    # No specific linter config -> no excludes
                    unexcluded_changed_files=$changed_files

                fi

                echo ''
                echo "Running $linter."
                if [ "${unexcluded_changed_files[*]}" ]; then
                    bin/"$linter" "${unexcluded_changed_files[@]}"
                    linter_returns+=("$?")
                else
                    # Having no files to parse is a successful run
                    linter_returns+=('0')
                fi

            done
    else
        # Having no files to parse is a successful run
        linter_returns+=('0')
    fi
}

changed_python_files=($(bin/git-changed-py))
changed_shell_files=($(bin/git-changed-sh))
changed_xml_files=($(bin/git-changed-xml))

if [ ! "${changed_python_files[*]}" ] \
    && [ ! "${changed_shell_files[*]}" ] \
    && [ ! "${changed_xml_files[*]}" ]; then
        echo ''
        echo 'No changes detected.'
        echo ''
        exit 0
fi

export python_linters=(
    'pycodestyle'
)

export shell_linters=(
)

export xml_linters=(
)

lint changed_python_files[@] python_linters[@] "Python files"
lint changed_shell_files[@] shell_linters[@] "shell scripts"
lint changed_xml_files[@] xml_linters[@] "XML files"

unique_linter_returns=(
    $(echo "${linter_returns[@]}" | tr ' ' '\n' | sort -u)
    )

echo ''

if [ "${#unique_linter_returns[@]}" == '1' ] \
    && [ "${unique_linter_returns[0]}" == '0' ]; then
        echo 'Found nothing to complain about. Well done!'
        echo ''
        exit 0
fi

# Fail per default
exit 1

# EOF
