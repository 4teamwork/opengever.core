Imports
    >>> from plone.testing.z2 import Browser
    >>> from plone.app.testing.interfaces import TEST_USER_NAME as portal_owner, TEST_USER_PASSWORD as default_password
    >>> from plone.dexterity.interfaces import IDexterityFTI
    >>> from plone.dexterity.utils import createContentInContainer
    >>> from zope.component import getUtility
    >>> from zope.schema import getFields
    >>> import transaction

  	>>> app = layer['app']
	>>> portal = layer['portal']
    >>> browser = Browser(app)

	>>> app.acl_users.userFolderAddUser(portal_owner, default_password,['Manager','Contributor','Reviewer','Administrator'], [])
	>>> browser.addHeader('Authorization', 'Basic '+portal_owner+':'+default_password )
    >>> portal.manage_setLocalRoles(portal_owner, ['Owner','Editor','Contributor'])

Create content
    >>> fti = getUtility(IDexterityFTI, name='ftw.mail.mail')
    >>> schema = fti.lookupSchema()
    >>> field_type = getFields(schema)['message']._type
    >>> msgtxt = 'Mime-Version: 1.0\nContent-Type: multipart/mixed; boundary=908752978\nTo: to@example.org\nFrom: from@example.org\nSubject: Attachment Test\nDate: Thu, 01 Jan 1970 01:00:00 +0100\nMessage-Id: <1>\n\n\n--908752978\nContent-Disposition: attachment;\n	filename*=iso-8859-1''B%FCcher.txt\nContent-Type: text/plain;\n	name="=?iso-8859-1?Q?B=FCcher.txt?="\nContent-Transfer-Encoding: base64\n\nw6TDtsOcCg==\n\n--908752978--\n'

    >>> linebreak_msgtxt = """Mime-Version: 1.0
    ... Content-Type: multipart/mixed; boundary=908752978
    ... To: to@example.org\nFrom: from@example.org
    ... Subject: Attachment Test
    ... Date: Thu, 01 Jan 1970 01:00:00 +0100\nMessage-Id: <1>
    ...
    ...
    ... --908752978
    ... Content-Disposition: attachment;
    ... 	filename=Projekt Test Inputvorschlag.doc
    ... Content-Type: text/plain;
    ... 	name="Projekt Test Input
    ...         vorschlag.doc"
    ... Content-Transfer-Encoding: base64
    ...
    ... w6TDtsOcCg==
    ...
    ... --908752978--
    ... """


    >>> dossier = createContentInContainer(
    ...     portal, 'opengever.dossier.businesscasedossier', title=u'Dossier 1')

    >>> mail1 = createContentInContainer(dossier, 'ftw.mail.mail',
    ...     message=field_type(data=msgtxt,
    ...          contentType=u'message/rfc822', filename=u'attachment.txt'))

    >>> mail3 = createContentInContainer(dossier, 'ftw.mail.mail',
    ...     message=field_type(data=linebreak_msgtxt,
    ...          contentType=u'message/rfc822', filename=u'attachment.txt'))

    >>> mail2 = createContentInContainer(
    ...     dossier, 'ftw.mail.mail', title=u'Mail 1')

in plone.app.testing we need to commit the transaction before we can use the content with the browser.
    >>> transaction.commit()

Browser & login
    >>> browser.handleErrors = False
    >>> browser.open('%s/login_form' % portal.absolute_url())
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()

No attachments
    >>> browser.open('%s/extract_attachments' % mail2.absolute_url())
    >>> browser.url == mail2.absolute_url()
    True

Cancel
    >>> browser.open('%s/extract_attachments' % mail1.absolute_url())
    >>> browser.getControl(name='form.cancelled').click()
    >>> browser.url == mail1.absolute_url()
    True

Submit
    >>> browser.open('%s/extract_attachments' % mail1.absolute_url())
    >>> browser.getControl(name='form.submitted').click()
    >>> 'You have not selected any attachments' in browser.contents
    True
    >>> browser.getControl(name='attachments:list').value=[1]
    >>> browser.getControl(name='form.submitted').click()
    >>> 'Created document BÃ¼cher' in browser.contents
    True

Should work also with line breaks in the attachment title
    >>> browser.open('%s/extract_attachments' % mail3.absolute_url())
    >>> browser.getControl(name='attachments:list').value=[1]
    >>> browser.getControl(name='form.submitted').click()
    >>> dossier.get('document-2').title == 'Projekt Test Input vorschlag'
    True

Delete attachments from message
    >>> browser.open('%s/extract_attachments' % mail1.absolute_url())
    >>> browser.getControl(name='attachments:list').value=[1]
    >>> browser.getControl(name='delete_action').value=['all']
    >>> browser.getControl(name='form.submitted').click()
    >>> from ftw.mail.utils import get_attachments
    >>> len(get_attachments(mail1.msg)) == 0
    True

