ReferenceNumber Prefix Adapter
==============================
Do some imports, and standard configuration:
    >>> from opengever.base.behaviors import base
    >>> from plone.dexterity.fti import DexterityFTI
    >>> from opengever.base.interfaces import IReferenceNumberPrefix

    >>> self.setRoles('Manager')
    >>> fti = DexterityFTI('OpenGeverBaseFTI')
    >>> self.portal.portal_types._setObject('OpenGeverBaseFTI', fti)
    'OpenGeverBaseFTI'
    >>> self.portal.invokeFactory('OpenGeverBaseFTI', 'f1')
    'f1'

Create Folder, and items and get the referenceNumberPrefixAdapter:
    >>> f1 = self.portal.get('f1')
    >>> adapter = IReferenceNumberPrefix(f1)
    >>> f1.invokeFactory('OpenGeverBaseFTI', 'Item1')
    'Item1'
    >>> item1 = f1.get('Item1')
    >>> f1.invokeFactory('OpenGeverBaseFTI', 'Item2')
    'Item2'
    >>> item2 = f1.get('Item2')

Check the numbering concept, starting by 1:
    >>> adapter.get_next_number() 
    1
    >>> item1 = f1.get('Item1')
    >>> adapter.set_number(item1)
    1
    >>> adapter.get_number(item1)
    1
    >>> adapter.get_next_number()
    2

The next number generator should be able to increase number greater than 9:
    >>> adapter.set_number(item2, '9')
    '9'
    >>> adapter.get_next_number()
    '10'

and also alpha-numeric numbers:
    >>> adapter.set_number(item1, 'A1A15')
    'A1A15'
    >>> adapter.set_number(item2)
    'A1A16'
    >>> adapter.get_next_number()
    'A1A17'

Check the is_valid_number() method:
    >>> adapter.is_valid_number('A1A16')
    False
    >>> adapter.is_valid_number('A1A17')
    True
