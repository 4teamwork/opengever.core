Creator Behavior
================

The Creator behavior sets the creator an content creation.
It also adds a creators field with listCreators() and setCreators()
methods. The field is hidden by default.


When we create a dexterity content type::

    >>> from opengever.base.behaviors import creator
    >>> from plone.dexterity.fti import DexterityFTI
    >>> fti = DexterityFTI('ReferenceFTI')
    >>> fti.behaviors = (
    ...                  'opengever.base.behaviors.creator.ICreator',
    ...                  )
    >>> self.portal.portal_types._setObject('ReferenceFTI', fti)
    'ReferenceFTI'
    >>> schema = fti.lookupSchema()


If we access the site as an admin TTW::

    >>> from Products.Five.testbrowser import Browser
    >>> from Products.PloneTestCase.setup import portal_owner, default_password
    >>> browser = Browser()
    >>> browser.handleErrors = True
    >>> self.app.acl_users.userFolderAddUser('root', 'secret',
    ...                                      ['Manager'], [])
    >>> browser.addHeader('Authorization', 'Basic root:secret' )



We can see this type in the addable types at the root of the site::

    >>> browser.open('http://nohost/plone/folder_factories')
    >>> 'ReferenceFTI' in browser.contents
    True
    >>> browser.getControl('ReferenceFTI').click()
    >>> browser.getControl('Add').click()
    >>> browser.url
    'http://nohost/plone/++add++ReferenceFTI'
    >>> 'creators' in browser.contents
    False
    >>> 'Title' in browser.contents
    True
    >>> browser.getControl('Title').value = 'Hallo Hugo'
    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://nohost/plone/ReferenceFTI/view'


Get the created object::

    >>> obj = self.portal.ReferenceFTI
    >>> obj
    <Item at ...>
    >>> creator.ICreatorAware.providedBy( obj )
    True


There should be a creator::

    >>> obj.listCreators()
    ('root',)
    >>> obj.Creator()
    'root'


We should be able to set the creators list::

    >>> obj.setCreators( ('foo',) )
    >>> obj.listCreators()
    ('foo',)
    >>> obj.addCreator('bar')
    >>> obj.listCreators()
    ('foo', 'bar')
