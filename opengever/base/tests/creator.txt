Creator Behavior
================

The Creator behavior sets the creator an content creation.
It also adds a creators field with listCreators() and setCreators()
methods. The field is hidden by default.


When we create a dexterity content type::

	>>> app = layer.get('app')
 	>>> portal = layer.get('portal')
    >>> from opengever.base.behaviors import creator
    >>> from plone.dexterity.fti import DexterityFTI
    >>> fti = DexterityFTI('ReferenceFTI')
    >>> fti.behaviors = (
    ...                  'opengever.base.behaviors.creator.ICreator',
    ...                  )
    >>> portal.portal_types._setObject('ReferenceFTI', fti)
    'ReferenceFTI'
    >>> schema = fti.lookupSchema()


With plone.app.testing we need to explicitly commit these changes for them 
to become visible to the testbrowser:

    >>> import transaction
    >>> transaction.commit()


If we access the site as an admin TTW:

    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(app)
    >>> browser.handleErrors = False
    >>> from plone.app.testing import TEST_USER_NAME, TEST_USER_PASSWORD
    >>> browser.addHeader('Authorization', 'Basic %s:%s' % (TEST_USER_NAME, TEST_USER_PASSWORD,))


We can see this type in the addable types at the root of the site::

    >>> browser.open('http://nohost/plone/folder_factories')
    >>> 'ReferenceFTI' in browser.contents
    True
    >>> browser.getControl('ReferenceFTI').click()
    >>> browser.getControl('Add').click()
    >>> browser.url
    'http://nohost/plone/++add++ReferenceFTI'
    >>> 'creators' in browser.contents
    False
    >>> 'Title' in browser.contents
    True
    >>> browser.getControl('Title').value = 'Hallo Hugo'
    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://nohost/plone/referencefti/view'


Get the created object::

    >>> obj = portal.get('referencefti')
    >>> obj
    <Item at ...>
    >>> creator.ICreatorAware.providedBy( obj )
    True


There should be a creator::

    >>> obj.listCreators()
    ('test_user_1_',)
    >>> obj.Creator()
    'test_user_1_'


We should be able to set the creators list::

    >>> obj.setCreators( ('foo',) )
    >>> obj.listCreators()
    ('foo',)
    >>> obj.addCreator('bar')
    >>> obj.listCreators()
    ('foo', 'bar')
