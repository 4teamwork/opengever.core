copy_item function
==================

imports:
	>>> from plone.testing.z2 import Browser
    >>> from plone.dexterity.fti import DexterityFTI
    >>> from Products.CMFCore.utils import getToolByName
	>>> self.setRoles('Manager')
	>>> ptool = getToolByName(self.portal, 'plone_utils')
	>>> from OFS.CopySupport import _cb_decode
	>>> from plone.dexterity.utils import createContentInContainer

create test container and object fti:
	>>> container = DexterityFTI('OpenGeverBaseContainer', 
	... 		klass="plone.dexterity.content.Container", 
	... 		global_allow=True, filter_content_types=False)
	>>> self.portal.portal_types._setObject('OpenGeverBaseContainer', container)
	'OpenGeverBaseContainer'
	>>> fti = DexterityFTI('OpenGeverBaseFTI')
    >>> fti.schema = 'opengever.base.tests.layer.IEmptySchema'
    >>> fti.behaviors = (
    ...                  'opengever.base.behaviors.base.IOpenGeverBase',
    ...                  )
    >>> self.portal.portal_types._setObject('OpenGeverBaseFTI', fti)
    'OpenGeverBaseFTI'

create test objects:
    >>> createContentInContainer(self.portal, 'OpenGeverBaseContainer', title=u'container')
	<Container at /plone/opengeverbasecontainer>
	>>> folder = self.portal['opengeverbasecontainer']
	>>> createContentInContainer(folder, 'OpenGeverBaseFTI', title=u'doc')
	<Item at /plone/opengeverbasecontainer/opengeverbasefti>
	>>> doc = folder['opengeverbasefti']

test copy_items view:

should select any items
	>>> folder.restrictedTraverse('copy_items')()
	'http://nohost/plone/opengeverbasecontainer'
	>>> ptool.showPortalMessages()[-1].message
	u'You have not selected any Items'

Fake Itemselection
	>>> self.portal.REQUEST['paths'] = ['/'.join(doc.getPhysicalPath())]
	>>> folder.restrictedTraverse('copy_items')()
	'http://nohost/plone/opengeverbasecontainer'
	>>> '__cp' in self.portal.REQUEST.keys()
	True

Check if Item has been saved to REQUEST
	>>> _cb_decode(self.portal.REQUEST['__cp'])
	(0, [('', 'plone', 'opengeverbasecontainer', 'opengeverbasefti')])

Add Second Item to test with multiple Items Selected
	>>> createContentInContainer(folder, 'OpenGeverBaseFTI', title=u'doc2')
	<Item at /plone/opengeverbasecontainer/opengeverbasefti-1>
	>>> doc2 = folder['opengeverbasefti-1']

Add Item to Paths
	>>> self.portal.REQUEST['paths'].append('/'.join(doc2.getPhysicalPath()))
	>>> folder.restrictedTraverse('copy_items')()
	'http://nohost/plone/opengeverbasecontainer'
	>>> '__cp' in self.portal.REQUEST.keys()
	True

Test if they were copied correctly
	>>> copiedItems = self.portal.REQUEST['__cp'].split(':')
	>>> _cb_decode(copiedItems[0])
	(0, [('', 'plone', 'opengeverbasecontainer', 'opengeverbasefti')])
	>>> _cb_decode(copiedItems[1])
	(0, [('', 'plone', 'opengeverbasecontainer', 'opengeverbasefti-1')])

Take away Copy permission 
	>>> doc.manage_permission('Copy or Move', [], acquire=False)
	>>> folder.restrictedTraverse('copy_items')()
	'http://nohost/plone/opengeverbasecontainer'

Should not be able to copy the file
	>>> ptool.showPortalMessages()[-1].message
	u'The item you selected cannot be copied'
