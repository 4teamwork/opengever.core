Classification Behavior
=======================

The classification behavior provides several fields used for classifying
a container:
    classification
    privacy_layer
    public_trial
    public_trial_statement
    archival_value
    custody_period
    retention_period

When we create a dexterity content type::

    >>> from opengever.base.behaviors import classification
    >>> from plone.dexterity.fti import DexterityFTI
    >>> from Products.CMFCore.interfaces._content import IFolderish
    >>> fti = DexterityFTI('ClassificationFTI',
    ...                    klass="plone.dexterity.content.Container",
    ...                    global_allow=True,
    ...                    filter_content_types=False)
    >>> fti.behaviors = ('opengever.base.behaviors.classification.IClassification',)
    >>> self.portal.portal_types._setObject('ClassificationFTI', fti)
    'ClassificationFTI'
    >>> schema = fti.lookupSchema()

If we access the site as an admin TTW::

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> browser.handleErrors = False
    >>> self.app.acl_users.userFolderAddUser('root', 'secret', ['Manager'], [])
    >>> browser.addHeader('Authorization', 'Basic root:secret')

We can see this type in the addable types at the root of the site::

    >>> browser.open("http://nohost/plone/folder_factories")
    >>> 'ClassificationFTI' in browser.contents
    True
    >>> browser.getControl("ClassificationFTI").click()
    >>> browser.getControl("Add").click()
    >>> browser.getControl(name="form.widgets.title").value = "My Object"
    >>> browser.getControl(name="form.widgets.IClassification.classification:list").value = [classification.CLASSIFICATION_CONFIDENTIAL]
    >>> browser.getControl(name="form.widgets.IClassification.privacy_layer:list").value = [classification.PRIVACY_LAYER_YES]
    >>> browser.getControl(name="form.widgets.IClassification.public_trial:list").value = [classification.PUBLIC_TRIAL_PRIVATE]
    >>> browser.getControl(name="form.widgets.IClassification.public_trial_statement").value = 'My Statement'
    >>> browser.getControl(name="form.buttons.save").click()
    >>> browser.url
    'http://nohost/plone/classificationfti/view'

Get the created object::
    
    >>> obj = self.portal.get('classificationfti')
    >>> obj!=None
    True

Check the values of the created object::

    >>> obj.classification == classification.CLASSIFICATION_CONFIDENTIAL
    True
    >>> obj.privacy_layer == classification.PRIVACY_LAYER_YES
    True
    >>> obj.public_trial == classification.PUBLIC_TRIAL_PRIVATE
    True
    >>> obj.public_trial_statement == 'My Statement'
    True
    
create a subitem
    >>> from plone.dexterity.utils import createContentInContainer
    >>> self.setRoles(['Manager'])
    >>> title = 'testobject'
    >>> tobj = createContentInContainer(obj, 'ClassificationFTI', title=title)
    >>> browser.open('http://nohost/plone/classificationfti/classificationfti/edit')
    >>> class_cont = browser.getControl(name="form.widgets.IClassification.classification:list")
    >>> classification.CLASSIFICATION_UNPROTECTED in class_cont.options
    False
    >>> classification.CLASSIFICATION_CLASSIFIED in class_cont.options
    True
    >>> class_cont = browser.getControl(name="form.widgets.IClassification.privacy_layer:list")
    >>> classification.PRIVACY_LAYER_NO in class_cont.options
    False
    >>> class_cont = browser.getControl(name="form.widgets.IClassification.public_trial:list")
    >>> classification.PUBLIC_TRIAL_PUBLIC in class_cont.options
    False