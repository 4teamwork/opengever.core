[transmogrifier]
pipeline =
    csvsource
    emptystringcaster
    path-from-referencenumber
    retention_period-cast
    custody_period-cast
    drop-empty-classification
    drop-empty-privacy
    drop-empty-trial
    drop-empty-retention
    drop-empty-custody
    drop-empty-archivalvalue
    insert-effectivetitle
    insert-title
    insert-addable_dossier_types
    insert-local_roles
    insert_repositoryroot_version
    constructor
    resetreferenceprefixmapping
    dex_schemaupdater
    blocklocalroles
    ac_local_roles
    reindexobject
    savepoint

[csvsource]
blueprint=collective.transmogrifier.sections.csvsource
dialect=OpenGeverCSV

[path-from-referencenumber]
blueprint=opengever.setup.pathfromreferencenumber
repo_root_id=ordnungssystem

[emptystringcaster]
blueprint=opengever.setup.emptystrincaster
fields=python:['valid_from', 'valid_until']

[drop-empty-classification]
blueprint = collective.transmogrifier.sections.manipulator
delete = classification
condition = python: item.get('classification') in (None, '', u'')

[drop-empty-privacy]
blueprint = collective.transmogrifier.sections.manipulator
delete = privacy_layer
condition = python: item.get('privacy_layer') in (None, '', u'')

[drop-empty-trial]
blueprint = collective.transmogrifier.sections.manipulator
delete = public_trial
condition = python: item.get('public_trial') in (None, '', u'')

[drop-empty-retention]
blueprint = collective.transmogrifier.sections.manipulator
delete = retention_period
condition = python: item.get('retention_period') in (None, '', u'')

[drop-empty-custody]
blueprint = collective.transmogrifier.sections.manipulator
delete = custody_period
condition = python: item.get('custody_period') in (None, '', u'')

[drop-empty-archivalvalue]
blueprint = collective.transmogrifier.sections.manipulator
delete = archival_value
condition = python: item.get('archival_value') in (None, '', u'')

[insert-effectivetitle]
blueprint = collective.transmogrifier.sections.inserter
key = string:effective_title
value = python: item['effective_title'].decode('utf-8')

[insert-title]
blueprint = collective.transmogrifier.sections.inserter
key = string:title
value = python: item['effective_title']

[insert-addable_dossier_types]
blueprint = collective.transmogrifier.sections.inserter
key = string:addable_dossier_types
value = python: [t for t in item.get('addable_dossier_types', '').replace(' ', '').split(',') if not t == '']

[insert_repositoryroot_version]
blueprint = collective.transmogrifier.sections.inserter
key = string:version
value = string:
condition = python:item.get('_type') == 'opengever.repository.repositoryroot'

[retention_period-cast]
blueprint = collective.transmogrifier.sections.inserter
key= string:retention_period
value = python: item.get('retention_period') and int(item['retention_period'])

[custody_period-cast]
blueprint = collective.transmogrifier.sections.inserter
key=string:custody_period
value = python: item.get('custody_period') and int(item['custody_period'])

[insert-local_roles]
blueprint=opengever.setup.insertlocalroles
fields=python:['read_dossiers_access', 'add_dossiers_access', 'edit_dossiers_access', 'close_dossiers_access', 'reactivate_dossiers_access']

[printer]
blueprint = collective.transmogrifier.sections.tests.pprinter

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[resetreferenceprefixmapping]
blueprint = opengever.setup.resetreferenceprefixmapping

[dex_schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[blocklocalroles]
blueprint=opengever.setup.blocklocalroles
fields=python:['block_inheritance']

[ac_local_roles]
blueprint = collective.blueprint.jsonmigrator.ac_local_roles

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 50
