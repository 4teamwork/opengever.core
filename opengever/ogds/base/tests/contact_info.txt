Imports / globals:

    >>> from Products.CMFCore.utils import getToolByName
    >>> from opengever.ogds.base.interfaces import IContactInformation
    >>> from opengever.ogds.base.model.client import Client
    >>> from opengever.ogds.base.model.user import User
    >>> from opengever.ogds.base.setuphandlers import _create_example_client
    >>> from opengever.ogds.base.setuphandlers import _create_example_user
    >>> from opengever.ogds.base.testing import create_contacts
    >>> from opengever.ogds.base.utils import create_session, get_current_client
    >>> from opengever.ogds.base.utils import get_client_id
    >>> from zope.component import getUtility

    >>> app = layer.get('app')
    >>> portal = layer.get('portal')

Lets create some users:

    >>> session = create_session()

    >>> _create_example_user(session, portal,
    ...                      'hugo.boss',
    ...                      {'firstname': 'Hugo',
    ...                       'lastname': 'Boss',
    ...                       'email': 'hugo@boss.local',
    ...                       'email2': 'hugo@private.ch'},
    ...                      ('client1_users',
    ...                       'client1_inbox_users'))

    >>> _create_example_user(session, portal,
    ...                      'peter.muster',
    ...                      {'firstname': 'Peter',
    ...                       'lastname': 'Muster'},
    ...                      ('client2_users',
    ...                       'client2_inbox_users'))



And we also need some clients:


    >>> _create_example_client(session, 'client1',
    ...                       {'title': 'Client 1',
    ...                        'ip_address': '127.0.0.1',
    ...                        'site_url': 'http://nohost/client1',
    ...                        'public_url': 'http://nohost/client1',
    ...                        'group': 'client1_users',
    ...                        'inbox_group': 'client1_inbox_users'})

    >>> _create_example_client(session, 'client2',
    ...                       {'title': 'Client 2',
    ...                        'ip_address': '127.0.0.1',
    ...                        'site_url': 'http://nohost/client2',
    ...                        'public_url': 'http://nohost/client2',
    ...                        'group': 'client2_users',
    ...                        'inbox_group': 'client2_inbox_users'})

    >>> _create_example_client(session, 'client3',
    ...                       {'title': 'Client 3',
    ...                        'enabled': False,
    ...                        'ip_address': '127.0.0.1',
    ...                        'site_url': 'http://nohost/client3',
    ...                        'public_url': 'http://nohost/client3',
    ...                        'group': 'client3_users',
    ...                        'inbox_group': 'client3_inbox_users'})


Create some local contacts:

    >>> create_contacts(portal)
    >>> len(portal.contacts.objectIds())
    3


Get the current client (see layer testing.py):

    >>> get_client_id()
    u'client1'

    >>> get_current_client()
    <Client client1>


Get the contact information utlity:

    >>> info = getUtility(IContactInformation)


User tests:

    >>> info.list_users()
    [<User hugo.boss>, <User peter.muster>]
    >>> info.is_user('hugo.boss')
    True
    >>> info.is_contact('hugo.boss')
    False
    >>> info.is_inbox('hugo.boss')
    False
    >>> info.get_user('hugo.boss')
    <User hugo.boss>

    >>> print info.get_user('someone.unknown')
    None
    >>> info.get_user('inbox:client1')
    Traceback (most recent call last):
    ...
    ValueError: principal inbox:client1 is not a user
    >>> info.describe('hugo.boss')
    u'Boss Hugo'
    >>> info.describe('hugo.boss', with_email=True)
    u'Boss Hugo (hugo@boss.local)'

    >>> info.get_email('hugo.boss')
    u'hugo@boss.local'
    >>> info.get_email2('hugo.boss')
    u'hugo@private.ch'

    >>> info.get_profile_url('hugo.boss')
    u'http://nohost/plone/@@user_details/hugo.boss'

    >>> info.render_link('hugo.boss')
    u'<a href="http://nohost/plone/@@user_details/hugo.boss">Boss Hugo</a>'


Contacts tests:

    >>> contacts = info.list_contacts()
    >>> contacts
    [<Products.ZCatalog.Catalog.mybrains object at ...>, <Products.ZCatalog.Catalog.mybrains object at ...>, <Products.ZCatalog.Catalog.mybrains object at ...>]

    >>> contacts[0].contactid
    'contact:kaufmann-sandra'

    >>> info.is_contact('contact:kaufmann-sandra')
    True

    >>> sandra = info.get_contact('contact:kaufmann-sandra')
    >>> sandra
    <Products.ZCatalog.Catalog.mybrains object at ...>

    >>> sandra.firstname
    'Sandra'
    >>> sandra.lastname
    'Kaufmann'
    >>> sandra.email
    'sandra.kaufmann@test.ch'


Inboxes tests:

    >>> tuple(info.list_inboxes())
    ((u'inbox:client1', u'Inbox: Client 1'), (u'inbox:client2', u'Inbox: Client 2'))
    >>> info.is_inbox(u'inbox:client1')
    True
    >>> info.is_user(u'inbox:client1')
    False
    >>> info.is_contact(u'inbox:client1')
    False
    >>> info.get_client_of_inbox(u'inbox:client1')
    <Client client1>

    >>> info.describe(u'inbox:client1')
    u'Inbox: Client 1'


Various lists:

    >>> list(info.list_assigned_users())
    [<User hugo.boss>]

    >>> list(info.list_assigned_users(client_id='client2'))
    [<User peter.muster>]

    >>> list(info.get_clients())
    [<Client client1>, <Client client2>]

    >>> info.get_client_by_id('client1')
    <Client client1>

    >>> print info.get_client_by_id('client3')
    None

    >>> print info.get_client_by_id('unknown client')
    None

