Behaviors
=========

This package provides a behavior called `opengever.task.task.ITask`.
This adds fields required by any task.

Test setup
----------

Before we can run these tests, we need to load the opengever.task
configuration. This will configure the behavior.

    >>> configuration = """\
    ... <configure
    ...      xmlns="http://namespaces.zope.org/zope"
    ...      i18n_domain="opengever.task">
    ...
    ...     <include package="Products.Five" file="meta.zcml" />
    ...     <include package="opengever.task" file="behaviors.zcml" />
    ... </configure>
    ... """

    >>> from StringIO import StringIO
    >>> from zope.configuration import xmlconfig
    >>> xmlconfig.xmlconfig(StringIO(configuration))

This behavior can be enabled for any content item. For the purposes of
testing, we will use the dexterity Container type and a custom
IBehaviorAssignable adapter to mark the behavior as enabled.

    >>> from plone.dexterity.content import Container

    >>> from plone.behavior.interfaces import IBehaviorAssignable
    >>> from zope.component import adapts
    >>> from zope.interface import implements
    >>> class TestingAssignable(object):
    ...     implements(IBehaviorAssignable)
    ...     adapts(Container)
    ...

    ...     def __init__(self, context):
    ...         self.context = context
    ...
    ...     def supports(self, behavior_interface):
    ...         return behavior_interface in self.enabled
    ...
    ...     def enumerate_behaviors(self):
    ...         for e in self.enabled:
    ...             yield queryUtility(IBehavior, name=e.__identifier__)

    >>> from zope.component import provideAdapter
    >>> provideAdapter(TestingAssignable)
