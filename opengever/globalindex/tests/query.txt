Register a named scoped session utility.

    >>> from z3c.saconfig import EngineFactory
    >>> from zope.component import provideUtility
    >>> from z3c.saconfig.interfaces import IEngineFactory
    >>> from z3c.saconfig import GloballyScopedSession
    >>> from z3c.saconfig.interfaces import IScopedSession
    >>> engine_factory = EngineFactory('sqlite:///:memory:')
    >>> provideUtility(engine_factory, provides=IEngineFactory, name=u'opengever_db')
    >>> scoped_session = GloballyScopedSession(engine=u'opengever_db')
    >>> provideUtility(scoped_session, provides=IScopedSession, name=u'opengever')

Register the TaskQuery utility.

    >>> from opengever.globalindex.interfaces import ITaskQuery
    >>> from opengever.globalindex.query import TaskQuery
    >>> from zope.component import getUtility
    >>> provideUtility(TaskQuery())
    >>> query = getUtility(ITaskQuery)

Get db session and create tables.

    >>> from z3c.saconfig import named_scoped_session
    >>> from opengever.globalindex.model.task import Task
    >>> from opengever.globalindex.model import Base
    >>> Session = named_scoped_session("opengever")
    >>> session = Session()
    >>> Base.metadata.create_all(session.bind)

Add some tasks.

    >>> t1 = Task(1, 'm1')
    >>> t1.responsible = 'Responsible 1'
    >>> t1.issuer = 'Issuer 1'
    >>> session.add(t1)
    >>> t2 = Task(2, 'm1')
    >>> t2.responsible = 'Responsible 2'
    >>> t2.issuer = 'Issuer 1'
    >>> session.add(t2)
    >>> t3 = Task(3, 'm2')
    >>> t3.responsible = 'Responsible 1'
    >>> t3.issuer = 'Issuer 2'
    >>> session.add(t3)

Query for task by int_id and client_id.

    >>> query.get_task(3, 'm2')
    <Task 3@m2>
    >>> query.get_task(1, 'm2')

Query for tasks by responsible.

    >>> query.get_tasks_for_responsible('Responsible 1')
    [<Task 1@m1>, <Task 3@m2>]
    >>> query.get_tasks_for_responsible('Responsible 3')
    []

Query for tasks by issuer.

    >>> query.get_tasks_for_issuer('Issuer 1')
    [<Task 1@m1>, <Task 2@m1>]
    >>> query.get_tasks_for_issuer('Issuer 3')
    []

