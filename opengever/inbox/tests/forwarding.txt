Forwarding Tests:
=================

imports and general stuff
    >>> from datetime import datetime
    >>> from plone.dexterity.utils import createContentInContainer
    >>> from Products.CMFCore.utils import getToolByName
    >>> from plone.testing.z2 import Browser
    >>> from Products.PloneTestCase.setup import portal_owner, default_password
    >>> from plone.app.testing.interfaces import TEST_USER_ID as portal_owner_id ,TEST_USER_NAME as portal_owner, TEST_USER_PASSWORD as default_password
	>>> import transaction
    >>>	from plone.app.testing import setRoles
    >>> import urllib

	>>> app = layer['app']
	>>> portal = layer['portal']
    >>> browser = Browser(app)

    >>> setRoles(portal, portal_owner_id, ['Owner','Editor','Contributor'])
	>>> browser.addHeader('Authorization', 'Basic %s:%s' % (portal_owner, default_password,))
	
create inbox and some documents for tests
-----------------------------------------
    >>> inbox = createContentInContainer(portal, 'opengever.inbox.inbox', title=u'inbox')
    >>> doc1 = createContentInContainer(inbox, 'opengever.document.document',title=u'Document for a forwarding')
    >>> doc2 = createContentInContainer(inbox, 'opengever.document.document',title=u'second Document for a forwarding')
    >>> transaction.commit()

start browser testing and create fakerequest
--------------------------------------------
browser configuration
    >>> browser.handleErrors = False
    >>> portal_url = portal.absolute_url()
    >>> wft = getToolByName(portal, 'portal_workflow')

login
    >>> browser.open('%s/login_form' % portal_url)
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()

test forwarding creation
========================

In Inboxes we should not be able to add forwardings using the factorymenu
    >>> browser.open(inbox.absolute_url())
    >>> '/++add++opengever.inbox.forwarding' not in browser.contents
    True

Creating a Forwarding without any documetn should not be possible
    >>> browser.open('%s/++add++opengever.inbox.forwarding' % inbox.absolute_url())
    >>> 'Error: Please select at least one document to forward' in browser.contents
    True

create a forwarding with two documents
    >>> data='paths:list=%s&paths:list=%s' % ('/'.join(doc1.getPhysicalPath()),'/'.join(doc2.getPhysicalPath()))
    >>> browser.open(
    ...     '%s/++add++opengever.inbox.forwarding' % inbox.absolute_url(), data=data)

    >>> browser.getControl(name='form.widgets.title').value = 'Dossier Test'

check defaults
    >>> browser.getControl(name='form.widgets.issuer:list').value
    ['inbox:plone']
    >>> browser.getControl(name='form.widgets.responsible:list').value
    ['inbox:plone']
    >>> browser.getControl(name='form.widgets.responsible_client:list').value
    ['plone']

create forwarding and check if documents are corectly moved
    >>> browser.getControl(name="form.buttons.save").click()
    >>> forwarding = inbox.get('forwarding-1')
    >>> inbox.get('document-1') == None
    True
    >>> forwarding.get('document-1')
    <Document at /plone/inbox/forwarding-1/document-1>
    >>> forwarding.get('document-2')
    <Document at /plone/inbox/forwarding-1/document-2>

check view
    >>> browser.open(forwarding.absolute_url())

test assign to dossier
======================

create dossier
    >>> dossier = createContentInContainer(
    ...     portal, 'opengever.dossier.businesscasedossier',
    ...     title=u'testdossier', responsible='portal_owner')
    >>> dossier_path = '/'.join(dossier.getPhysicalPath())
    >>> transaction.commit()

assign to dossier
    >>> browser.open(
    ...     '%s/addresponse?form.widgets.transition=forwarding-transition-assign-to-dossier' % forwarding.absolute_url())
    >>> browser.getControl(name='form.widgets.target_dossier.widgets.query').value='testdossier'
    >>> browser.getControl(name='form.widgets.target_dossier.buttons.search').click()
    >>> browser.getControl(name='form.widgets.target_dossier:list').value= [dossier_path,]
    >>> browser.getControl(name='form.buttons.save').click()

A yearfolder, with the year as id, should be created
    >>> yearfolder = inbox.get(str(datetime.now().year))
    >>> yearfolder.portal_type
    'opengever.inbox.yearfolder'

The forwarding should be stored in the yearfolder, and resolved
    >>> forwarding = yearfolder.get('forwarding-1')
    >>> wft.getInfoFor(forwarding, 'review_state')
    'forwarding-state-closed'

And a task form displayed
    >>> browser.url
    'http://nohost/plone/dossier-1/task-1/edit'

set the required fields
    >>> browser.getControl(name='form.widgets.task_type:list').value = ['direct-execution']
    >>> browser.getControl(name='form.widgets.deadline').value = '01-01-2025'
    >>> browser.getControl(name='form.buttons.save').click()

check the new created task
    >>> browser.url
    'http://nohost/plone/dossier-1/task-1'
    >>> task = dossier.get('task-1')
    >>> wft.getInfoFor(task, 'review_state')
    'task-state-open'
    >>> task.deadline.year == 2025
    True
    >>> task.issuer and task.responsible
    u'inbox:plone'
