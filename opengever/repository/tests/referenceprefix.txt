Reference Behavior
==================

The reference number Behavior show a integer field (reference Number), the reference number field.
The behavior set the default value to the next possible sequence number:

    >>> from opengever.repository.behaviors import referenceprefix


Since plone tests sucks, we need to re-register the reference number validator again -.-

    >>> from zope.component import getMultiAdapter, provideAdapter
    >>> from z3c.form.interfaces import IValidator
    >>> from plone.app.testing import setRoles, TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD
	>>> portal = layer['portal']
	>>> app = layer['app']
	>>> request = layer['request']
    


    >>> getMultiAdapter((portal, None, None,
    ...                  referenceprefix.IReferenceNumberPrefix['reference_number_prefix'], None), IValidator)
    <SimpleFieldValidator for IReferenceNumberPrefix['reference_number_prefix']>
    >>> provideAdapter(referenceprefix.ReferenceNumberPrefixValidator)
    >>> getMultiAdapter((portal, None, None,
    ...                  referenceprefix.IReferenceNumberPrefix['reference_number_prefix'], None), IValidator)
    <ReferenceNumberPrefixValidator for IReferenceNumberPrefix['reference_number_prefix']>

When we create a dexterity content type::

    >>> from plone.dexterity.fti import DexterityFTI
    >>> fti = DexterityFTI('ReferenceFTI')
    >>> fti.behaviors = (
    ...                  'opengever.repository.behaviors.referenceprefix.IReferenceNumberPrefix',
    ...                  )
    >>> portal.portal_types._setObject('ReferenceFTI', fti)
    'ReferenceFTI'
    >>> from plone.dexterity.interfaces import IDexterityFTI
    >>> from zope.component import provideUtility
    >>> provideUtility(fti, IDexterityFTI, name=u'ReferenceFTI')
    >>> from plone.dexterity.schema import SCHEMA_CACHE
    >>> SCHEMA_CACHE.clear()
    >>> schema = fti.lookupSchema()
	>>> import transaction
	>>> transaction.commit()

If we access the site as an admin TTW::
    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(app)
    >>> browser.handleErrors = False
	>>> browser.addHeader('Authorization', 'Basic %s:%s' % (TEST_USER_NAME, TEST_USER_PASSWORD,))

We can see this type in the addable types at the root of the site::
    >>> browser.open('http://nohost/plone/folder_factories')
    >>> 'ReferenceFTI' in browser.contents
    True
    >>> browser.getControl('ReferenceFTI').click()
    >>> browser.getControl('Add').click()
    >>> browser.url
    'http://nohost/plone/++add++ReferenceFTI'
    >>> 'reference_number_prefix' in browser.contents
    True
    >>> browser.getControl(name='form.widgets.IReferenceNumberPrefix.reference_number_prefix').value
    '1'
    >>> browser.getControl('Title').value = 'Hugo'
    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://nohost/plone/referencefti/view'

checked the saved obj ::
    >>> obj = portal.get('referencefti')
    >>> obj
    <Item at ...>
    >>> referenceprefix.IReferenceNumberPrefixMarker.providedBy(obj)
    True

Add a second Type in this folder::
    >>> browser.open('http://nohost/plone/folder_factories')
    >>> 'ReferenceFTI' in browser.contents
    True
    >>> browser.getControl('ReferenceFTI').click()
    >>> browser.getControl('Add').click()
    >>> browser.url
    'http://nohost/plone/++add++ReferenceFTI'
    >>> 'reference_number_prefix' in browser.contents
    True
    >>> browser.getControl('Title').value = 'Hans'
    >>> browser.getControl('Reference Prefix').value
    '2'

We should not be able to use a already used value::
    >>> browser.getControl('Reference Prefix').value = '1'
    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://nohost/plone/++add++ReferenceFTI'

Ok, lets use a free one::
    >>> browser.getControl('Reference Prefix').value = '2'
    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://nohost/plone/referencefti-1/view'

It should be possbile to use alpha-numeric references::
    >>> browser.open('http://nohost/plone/++add++ReferenceFTI')
    >>> browser.getControl('Reference Prefix').value
    '3'
    >>> browser.getControl('Reference Prefix').value = 'a1x10'
    >>> browser.getControl('Title').value = 'Peter'
    >>> browser.getControl('Save').click()
    >>> browser.url
    'http://nohost/plone/referencefti-2/view'

Check the reference numbers of the objects::
    >>> for obj in portal.objectValues():
    ...     if referenceprefix.IReferenceNumberPrefixMarker.providedBy(obj):
    ...         num = referenceprefix.IReferenceNumberPrefix(obj).reference_number_prefix
    ...         print (obj.Title(), num)
    ('Hugo', u'1')
    ('Hans', u'2')
    ('Peter', u'a1x10')